# Django Ranger Project

This project is a Django application built to interact with an existing PostgreSQL database that was originally structured for a Laravel application. It provides a RESTful API using Django REST Framework to expose and manage data from these existing tables.

## Table of Contents

-   [Features](#features)
-   [Prerequisites](#prerequisites)
-   [Getting Started](#getting-started)
    -   [Clone the Repository](#clone-the-repository)
    -   [Environment Variables](#environment-variables)
    -   [Build and Run Docker Containers](#build-and-run-docker-containers)
    -   [Apply Database Migrations](#apply-database-migrations)
    -   [Create a Django Superuser (Optional)](#create-a-django-superuser-optional)
-   [Running the Application](#running-the-application)
-   [API Endpoints](#api-endpoints)
-   [Project Structure](#project-structure)
-   [License](#license)

## Features

* **Django Framework:** Robust web framework for rapid development.
* **Django REST Framework (DRF):** Powerful toolkit for building Web APIs.
* **PostgreSQL Database:** Connects to an existing PostgreSQL database previously used by a Laravel application.
* **Docker & Docker Compose:** Containerized development environment for consistency and easy setup.
* **Existing Database Integration:** Models are mapped to existing tables (`alert_types`, `alerts`, `builders`, `bulk_email_templates`, `bulk_message_type`, `bulk_phone_templates`, `circuits`, `circuit_alerts`, `circuit_carriers`, etc.).
* **RESTful API:** Exposes data via well-defined API endpoints.

## Prerequisites

Before you begin, ensure you have the following installed:

* **Docker:** [Install Docker](https://docs.docker.com/get-docker/)
* **Docker Compose:** (Usually comes with Docker Desktop)

## Getting Started

Follow these steps to get the project up and running on your local machine.

### Clone the Repository

```bash
git clonehttps://github.com/SrinivasaRamesh48/django-ranger.git
cd django-ranger 